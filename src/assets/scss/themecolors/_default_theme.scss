@import "typographyConfig";

// Define a dark theme
$dark-theme: mat.define-theme(
  (
    color: (
      theme-type: dark,
      primary: mat.$azure-palette,
    ),
    typography:(
      plain-family: $font-family,
      brand-family: $font-family,
    )
  )
);

// Define a light theme
$light-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: mat.$azure-palette,
    ),
    typography:(
      plain-family: $font-family,
      brand-family: $font-family,
    )
  )
);

// @include mat.all-component-typographies($custom-typography);
// @include mat.typography-hierarchy($custom-typography);

.default-theme {
  @include mat.all-component-themes($light-theme);
  // @include mat.typography-hierarchy($light-theme);
  // @include mat.system-level-colors($light-theme);
  // @include mat.system-level-typography($light-theme);

  // Components themes
  // @include custom-mixins.theme($light-theme);

  // Add backwards compatibility styles for color variants
  @include mat.color-variants-backwards-compatibility($light-theme);

  // @include custom-mixins.variant-success(custom-variant.$success-light-theme);
  // @include custom-mixins.variant-info(custom-variant.$info-light-theme);
  // @include custom-mixins.variant-warning(custom-variant.$warning-light-theme);
  // @include custom-mixins.variant-danger(custom-variant.$danger-light-theme);
}

.default-theme.dark {
  @include mat.all-component-colors($dark-theme);

  // Components themes
  // @include custom-mixins.theme($dark-theme);

  @include mat.color-variants-backwards-compatibility($dark-theme);

  // @include custom-mixins.variant-success(custom-variant.$success-dark-theme);
  // @include custom-mixins.variant-info(custom-variant.$info-dark-theme);
  // @include custom-mixins.variant-warning(custom-variant.$warning-dark-theme);
  // @include custom-mixins.variant-danger(custom-variant.$danger-dark-theme);
}
